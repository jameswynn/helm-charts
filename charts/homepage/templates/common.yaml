{{- include "bjw-s.common.loader.init" . }}

{{- define "app-template.hardcodedValues" -}}

# Set the nameOverride based on the release name if no override has been set
{{ if not .Values.global.nameOverride }}
global:
  nameOverride: "{{ .Release.Name }}"
{{ end }}

{{- end -}}
{{- $_ := mergeOverwrite .Values (include "app-template.hardcodedValues" . | fromYaml) -}}

{{/* Append the configMap volume to the volumes */}}
{{- define "homepage.configVolume" -}}
enabled: "true"
type: "custom"
volumeSpec:
  configMap:
    name: {{ (default (include "bjw-s.common.lib.chart.names.fullname" .) .Values.config.useExistingConfigMap) }}
# Modified this to use advancedMounts, instead of subPath, because that's what the Common library expects for subPath mounts
advancedMounts:
  main:
    main:
      - path: /config/bookmarks.yaml
        subPath: bookmarks.yaml
      - path: /config/docker.yaml
        subPath: docker.yaml
      - path: /config/kubernetes.yaml
        subPath: kubernetes.yaml
      - path: /config/services.yaml
        subPath: services.yaml
      - path: /config/settings.yaml
        subPath: settings.yaml
      - path: /config/widgets.yaml
        subPath: widgets.yaml
{{- end -}}
{{- $_ := set .Values.persistence "homepage-config" (include "homepage.configVolume" . | fromYaml) -}}

# Convert type from interface {} to map[string]interface {}
{{- $_ := set .Values.controllers.main "annotations" (dict "values-checksum" ( print .Values | sha256sum ) ) -}}

{{ if .Values.enableRbac }}
{{- $_ := set .Values.serviceAccount "create" "true" -}}
{{ end }}

{{ include "homepage.configmap" . }}
{{ include "homepage.rbac" . }}

{{/* Render the templates */}}
{{ include "bjw-s.common.loader.generate" . }}
