image:
  repository: ghcr.io/gethomepage/homepage
  # tag: v0.6.0

# Enable RBAC. RBAC is necessary to use Kubernetes integration
enableRbac: false

extraClusterRoles:
  # - apiGroups:
  #   - some-group
  #   resources:
  #   - some-resource
  #   verbs:
  #   - get

serviceAccount:
  # Specify a different service account name. When blank it will default to the release
  # name if *create* is enabled, otherwise it will refer to the default service account.
  name: ""
  # Create service account. Needed when RBAC is enabled.
  create: false

service:
  main:
    ports:
      http:
        port: 3000

controller:
  strategy: RollingUpdate
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%

# Enable the ingress to expose Homepage to the network.
ingress:
  main:
    enabled: false
    # labels:
    #   # This label will enable discover of this deployment in Homepage
    #   gethomepage.dev/enabled: "true"
    # annotations:
    #   # These annotations will configure how this deployment is shown in Homepage
    #   gethomepage.dev/name: "Homepage"
    #   gethomepage.dev/description: "A modern, secure, highly customizable application dashboard."
    #   gethomepage.dev/group: "A New Group"
    #   gethomepage.dev/icon: "homepage.png"
    # ingressClassName: "nginx"
    # hosts:
    #   - host: &host "homepage.local"
    #     paths:
    #       - path: /
    #         pathType: Prefix
    # tls:
    #   - hosts:
    #       - *host

# All the config files for Homepage can be specified under their relevant config block.
config:
  # To use an existing ConfigMap uncomment this line and specify the name
  # useExistingConfigMap: existing-homepage-configmap
  bookmarks:
    - Developer:
        - Github:
            - abbr: GH
              href: https://github.com/

  services:
    - My First Group:
        - My First Service:
            href: http://localhost/
            description: Homepage is awesome

    - My Second Group:
        - My Second Service:
            href: http://localhost/
            description: Homepage is the best

    - My Third Group:
        - My Third Service:
            href: http://localhost/
            description: Homepage is ðŸ˜Ž
  widgets:
    - resources:
        # change backend to 'kubernetes' to use Kubernetes integration. Requires RBAC.
        backend: resources
        expanded: true
        cpu: true
        memory: true
    - search:
        provider: duckduckgo
        target: _blank
    ## Uncomment to enable Kubernetes integration
    # - kubernetes:
    #     cluster:
    #       show: true
    #       cpu: true
    #       memory: true
    #       showLabel: true
    #       label: "cluster"
    #     nodes:
    #       show: true
    #       cpu: true
    #       memory: true
    #       showLabel: true
  kubernetes:
    # change mode to 'cluster' to use RBAC service account
    mode: disable
  docker:
  settings:

  # all sections can alternately be appended with "String" such as this example settings. This is useful
  # for defining a stable ordering. Unfortunately Go's (and therefore Helm's) toYaml function sorts keys
  # and loses and input ordering. Using a string is the best way around this.
  settingsString: |
    title: Homepage
    headerStyle: boxed
    layout:
      My First Group:
      My Second Group:
      My Third Group:

# -- Main environment variables. Template enabled.
# Syntax options:
# A) TZ: UTC
# B) PASSWD: '{{ .Release.Name }}'
# C) PASSWD:
#      configMapKeyRef:
#        name: config-map-name
#        key: key-name
# D) PASSWD:
#      valueFrom:
#        secretKeyRef:
#          name: secret-name
#          key: key-name
#      ...
# E) - name: TZ
#      value: UTC
# F) - name: TZ
#      value: '{{ .Release.Name }}'
env:
  - name: HOMEPAGE_ALLOWED_HOSTS
    # This value must be set
    # ref: https://gethomepage.dev/installation/#homepage_allowed_hosts
    value: null

# To include environment variables from other configs or other secrets for use in
# Homepage's variable substitutions. Refer to them here.
# envFrom:
#   - secretRef:
#       name: my-secret
#   - configMapRef:
#       name: my-configmap

persistence:
  logs:
    enabled: true
    type: emptyDir
    mountPath: /app/config/logs

# resources:
#   requests:
#     memory: 10Mi
#     cpu: 10m
#   limits:
#     memory: 200Mi
#     cpu: 500m
